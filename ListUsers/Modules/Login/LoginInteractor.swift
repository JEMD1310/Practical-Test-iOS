//
//  LoginInteractor.swift
//  ListUsers
//
//  Created by Juan Eduardo Montiel Dominguez on 01/12/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation
import Alamofire
import AlamofireObjectMapper

final class LoginInteractor {
}

// MARK: - Extensions -

extension LoginInteractor: LoginInteractorInterface {
    func executeLogin(user: String, password: String, callback: @escaping (Bool, String?) -> Void) {
            
        if user.isEmpty {
            callback(false, NSLocalizedString("msgUserEmptyAlertError", comment: ""))
            return
        } else if !user.isValidUser {
            callback(false, NSLocalizedString("msgUserInvalidAlertError", comment: ""))
            return
        }
        
        if password.isEmpty {
            callback(false, NSLocalizedString("msgPassEmptyAlertError", comment: ""))
            return
        }
        
        
        let dic: [String: Any] = [
            "results": 1,
            "seed": "smartstc",
            "nat": "ES"
        ]

        Alamofire.request("https://randomuser.me/api", method: .get, parameters: dic).responseObject { (response: DataResponse<UserListResponse>) in
            debugPrint(response)
            switch response.result {
            case .success(let value):
                guard let results = value.results, !results.isEmpty else {
                    callback(false, NSLocalizedString("msgCredentialsInvalidAlertError", comment: ""))
                    return
                }
                guard let profile = results.first else {
                    callback(false, NSLocalizedString("msgCredentialsInvalidAlertError", comment: ""))
                    return
                }
                guard let username = profile.login?.username else {
                    callback(false, NSLocalizedString("msgCredentialsInvalidAlertError", comment: ""))
                    return
                }
                guard let pass = profile.login?.password else {                    callback(false, NSLocalizedString("msgCredentialsInvalidAlertError", comment: ""))
                    return
                }
                
                if user == username && pass == password {
                    callback(true, nil)
                }else{
                    callback(false, NSLocalizedString("msgCredentialsInvalidAlertError", comment: ""))
                }
            case .failure(_):
                callback(false, NSLocalizedString("internetConectionError", comment: ""))
            }
        }
    }
    
}
