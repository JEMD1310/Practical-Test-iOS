//
//  LoginViewController.swift
//  ListUsers
//
//  Created by Juan Eduardo Montiel Dominguez on 01/12/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class LoginViewController: UIViewController {

    // MARK: - Public properties -

    var presenter: LoginPresenterInterface!
    @IBOutlet weak var scrollView: UIScrollView!
    @IBOutlet weak var titleImageView: UIImageView!
    @IBOutlet weak var userTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
//        self.userTextField.text = "purplerabbit912"
//        self.passwordTextField.text = "deskjet"
    }
        
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        registerKeyBoardNotifications()
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        unregisterKeyBoardNotifications()
    }
    
    // MARK: - Keyboard
    
    private func registerKeyBoardNotifications() {
        NotificationCenter.default.addObserver(self, selector: #selector(keyboardWillShow(notification:)), name: UIResponder.keyboardWillShowNotification,object: nil)
        NotificationCenter.default.addObserver(self, selector: #selector(keyboardWillHide(notification:)), name: UIResponder.keyboardWillHideNotification, object: nil)
    }
    
    private func unregisterKeyBoardNotifications() {
        NotificationCenter.default.removeObserver(self, name: UIResponder.keyboardDidShowNotification, object: nil)
        NotificationCenter.default.removeObserver(self, name: UIResponder.keyboardWillShowNotification, object: nil)
    }
    
    @objc func keyboardWillShow(notification: Notification) {
        let userInfo = notification.userInfo!
        let keyboardSize = userInfo[UIResponder.keyboardFrameEndUserInfoKey] as! NSValue
        let keyboardFrame = keyboardSize.cgRectValue
        
        let realDistance = keyboardFrame.height
        let insets = UIEdgeInsets(top: 0, left: 0, bottom: realDistance, right: 0)
        scrollView.contentInset = insets
        scrollView.scrollIndicatorInsets = insets
    }
    
    @objc func keyboardWillHide(notification: Notification) {
        let insets = UIEdgeInsets(top: 0, left: 0, bottom: 0, right: 0)
        scrollView.contentInset = insets
        scrollView.scrollIndicatorInsets = insets
    }
    
    //MARK: - IBAction

    @IBAction func logInButtonPressed(_ sender: Any) {
        guard let user = userTextField.text else { return }
        guard let password = passwordTextField.text else { return }
                
        self.view.endEditing(true)
        presenter.performLogin(user: user, password: password)
    }
    
    @IBAction func closedKeyboard(_ sender: Any) {
        self.view.endEditing(true)
    }
}

// MARK: - Extensions -

extension LoginViewController: LoginViewInterface {
    func showLoading() {
        self.showLoader()
    }
    
    func dimissLoading() {
        self.hideLoader()
    }
    
    func successfullLogin() {
        self.presenter.goToMainView()
    }
    
    func failureLogin(message: String) {
        showMessageDialog(title: NSLocalizedString("titleAlertError", comment: ""), message: message)
    }
    
}

extension LoginViewController: UITextFieldDelegate {

    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        switch textField {
        case userTextField:
            passwordTextField.becomeFirstResponder()
        case passwordTextField:
           logInButtonPressed(self)
        default:
            break
        }
        return true
    }
}
