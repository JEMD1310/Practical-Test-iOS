//
//  ListPresenter.swift
//  ListUsers
//
//  Created by Juan Eduardo Montiel Dominguez on 02/12/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import FirebaseFirestore

final class ListPresenter {

    // MARK: - Private properties -

    private unowned let _view: ListViewInterface
    private let _wireframe: ListWireframeInterface
    private let _interactor: ListInteractorInterface

    // MARK: - Lifecycle -

    init(wireframe: ListWireframeInterface, view: ListViewInterface, interactor: ListInteractorInterface) {
        _wireframe = wireframe
        _view = view
        _interactor = interactor
    }
}

// MARK: - Extensions -

extension ListPresenter: ListPresenterInterface {
    func fetchUsers(last: Int) {
        self._view.showLoading()
        self._interactor.executeFetchUsers(last: last) { data, error in
            if let error = error {
                self._view.failure(message: error)
                self._view.dimissLoading()
            }else{
                if let users = data {
                    self._view.showUsers(users: users)
                    DispatchQueue.main.asyncAfter(deadline: .now() + 1, execute: {
                        self._view.dimissLoading()
                    })
                }else{
                    self._view.failure(message: NSLocalizedString("msgGenericError", comment: ""))
                    self._view.dimissLoading()
                }
            }
        }
    }
    
    func presentLogin() {
        UserDefaults.standard.setValue(false, forKey: "isLogged")
        self._wireframe.navigate(to: .goToLogin)
    }
    
    func presentDetail(data: UserModel) {
        self._wireframe.navigate(to: .goToDetail(data: data))
    }
    
}
