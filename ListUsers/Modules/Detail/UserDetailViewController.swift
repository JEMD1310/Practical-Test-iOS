//
//  UserDetailViewController.swift
//  ListUsers
//
//  Created by Juan Eduardo Montiel Dominguez on 02/12/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import MapKit

final class UserDetailViewController: UIViewController {

    // MARK: - Public properties -

    var presenter: UserDetailPresenterInterface!
    var data: UserModel?
    
    @IBOutlet weak var imgProfile: UIImageView!
    @IBOutlet weak var nameLabel: UILabel!
    @IBOutlet weak var genderLabel: UILabel!
    @IBOutlet weak var ageLabel: UILabel!
    @IBOutlet weak var emailLabel: UILabel!
    @IBOutlet weak var phoneLabel: UILabel!
    @IBOutlet weak var cellphoneLabel: UILabel!
    @IBOutlet weak var idTitleLabel: UILabel!
    @IBOutlet weak var idLabel: UILabel!
    @IBOutlet weak var streetLabel: UILabel!
    @IBOutlet weak var cityLabel: UILabel!
    @IBOutlet weak var stateLabel: UILabel!
    @IBOutlet weak var countryLabel: UILabel!
    @IBOutlet weak var postCodeLabel: UILabel!
    @IBOutlet weak var mapButton: UIButton!
    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        drawUI()
    }
	
    func drawUI() {
        mapButton.setTitle(NSLocalizedString("mapTitle", comment: ""), for: .normal)
        guard let user = data else { return }
        
        imgProfile.layer.cornerRadius = imgProfile.frame.width / 2
        imgProfile.layer.masksToBounds = true
        imgProfile.downloadedFrom(link: user.picture?.large ?? "", contentMode: .scaleAspectFit)
        nameLabel.text = "\(user.name?.title ?? "") \(user.name?.first ?? "") \(user.name?.last ?? "")"
        genderLabel.text = user.gender
        ageLabel.text = "\(user.dob?.age ?? 0)"
        emailLabel.text = user.email
        phoneLabel.text = user.phone
        cellphoneLabel.text = user.cell
        idTitleLabel.text = "\(user.id?.name ?? ""):"
        idLabel.text = user.id?.value
        streetLabel.text = "\(user.location?.street?.name ?? "") #\(user.location?.street?.number ?? 0)"
        cityLabel.text = user.location?.city
        stateLabel.text = user.location?.state
        countryLabel.text = user.location?.country
        postCodeLabel.text =  "\(user.location?.postcode ?? 00000)"

    }
    
    @IBAction func mapButtonPressed(_ sender: Any) {
        guard let user = data else { return }
        guard let lat = user.location?.coordinates?.latitude else { return }
        guard let lng = user.location?.coordinates?.longitude else { return }
        
        let latitude:CLLocationDegrees =  Double(lat) ?? 0.0
        let longitude:CLLocationDegrees =  Double(lng) ?? 0.0
        
        let coordinate = CLLocationCoordinate2DMake(latitude, longitude)
        let region = MKCoordinateRegion(center: coordinate, latitudinalMeters: 10000, longitudinalMeters: 10000)
        let placemark = MKPlacemark(coordinate: coordinate, addressDictionary: nil)
        let mapItem = MKMapItem(placemark: placemark)
        let options = [
            MKLaunchOptionsMapCenterKey: NSValue(mkCoordinate: region.center),
            MKLaunchOptionsMapSpanKey: NSValue(mkCoordinateSpan: region.span)]
        mapItem.name = "\(user.location?.street?.name ?? "") #\(user.location?.street?.number ?? 0)"
        mapItem.openInMaps(launchOptions: options)
    }
}

// MARK: - Extensions -

extension UserDetailViewController: UserDetailViewInterface {
}
